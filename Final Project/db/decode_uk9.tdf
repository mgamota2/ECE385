--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="MAX 10" LPM_DECODES=19 LPM_WIDTH=5 data eq
--VERSION_BEGIN 18.1 cbx_cycloneii 2018:09:12:13:04:24:SJ cbx_lpm_add_sub 2018:09:12:13:04:24:SJ cbx_lpm_compare 2018:09:12:13:04:24:SJ cbx_lpm_decode 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ cbx_nadder 2018:09:12:13:04:24:SJ cbx_stratix 2018:09:12:13:04:24:SJ cbx_stratixii 2018:09:12:13:04:24:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_uk9
( 
	data[4..0]	:	input;
	eq[18..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	eq_node[18..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode274w[2..0]	: WIRE;
	w_anode288w[3..0]	: WIRE;
	w_anode305w[3..0]	: WIRE;
	w_anode315w[3..0]	: WIRE;
	w_anode325w[3..0]	: WIRE;
	w_anode335w[3..0]	: WIRE;
	w_anode345w[3..0]	: WIRE;
	w_anode355w[3..0]	: WIRE;
	w_anode365w[3..0]	: WIRE;
	w_anode377w[2..0]	: WIRE;
	w_anode387w[3..0]	: WIRE;
	w_anode398w[3..0]	: WIRE;
	w_anode408w[3..0]	: WIRE;
	w_anode418w[3..0]	: WIRE;
	w_anode428w[3..0]	: WIRE;
	w_anode438w[3..0]	: WIRE;
	w_anode448w[3..0]	: WIRE;
	w_anode458w[3..0]	: WIRE;
	w_anode469w[2..0]	: WIRE;
	w_anode479w[3..0]	: WIRE;
	w_anode490w[3..0]	: WIRE;
	w_anode500w[3..0]	: WIRE;
	w_anode510w[3..0]	: WIRE;
	w_anode520w[3..0]	: WIRE;
	w_anode530w[3..0]	: WIRE;
	w_anode540w[3..0]	: WIRE;
	w_anode550w[3..0]	: WIRE;
	w_anode561w[2..0]	: WIRE;
	w_anode571w[3..0]	: WIRE;
	w_anode582w[3..0]	: WIRE;
	w_anode592w[3..0]	: WIRE;
	w_anode602w[3..0]	: WIRE;
	w_anode612w[3..0]	: WIRE;
	w_anode622w[3..0]	: WIRE;
	w_anode632w[3..0]	: WIRE;
	w_anode642w[3..0]	: WIRE;
	w_data272w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	eq[] = eq_node[];
	eq_node[18..0] = eq_wire[18..0];
	eq_wire[] = ( ( w_anode642w[3..3], w_anode632w[3..3], w_anode622w[3..3], w_anode612w[3..3], w_anode602w[3..3], w_anode592w[3..3], w_anode582w[3..3], w_anode571w[3..3]), ( w_anode550w[3..3], w_anode540w[3..3], w_anode530w[3..3], w_anode520w[3..3], w_anode510w[3..3], w_anode500w[3..3], w_anode490w[3..3], w_anode479w[3..3]), ( w_anode458w[3..3], w_anode448w[3..3], w_anode438w[3..3], w_anode428w[3..3], w_anode418w[3..3], w_anode408w[3..3], w_anode398w[3..3], w_anode387w[3..3]), ( w_anode365w[3..3], w_anode355w[3..3], w_anode345w[3..3], w_anode335w[3..3], w_anode325w[3..3], w_anode315w[3..3], w_anode305w[3..3], w_anode288w[3..3]));
	w_anode274w[] = ( (w_anode274w[1..1] & (! data_wire[4..4])), (w_anode274w[0..0] & (! data_wire[3..3])), B"1");
	w_anode288w[] = ( (w_anode288w[2..2] & (! w_data272w[2..2])), (w_anode288w[1..1] & (! w_data272w[1..1])), (w_anode288w[0..0] & (! w_data272w[0..0])), w_anode274w[2..2]);
	w_anode305w[] = ( (w_anode305w[2..2] & (! w_data272w[2..2])), (w_anode305w[1..1] & (! w_data272w[1..1])), (w_anode305w[0..0] & w_data272w[0..0]), w_anode274w[2..2]);
	w_anode315w[] = ( (w_anode315w[2..2] & (! w_data272w[2..2])), (w_anode315w[1..1] & w_data272w[1..1]), (w_anode315w[0..0] & (! w_data272w[0..0])), w_anode274w[2..2]);
	w_anode325w[] = ( (w_anode325w[2..2] & (! w_data272w[2..2])), (w_anode325w[1..1] & w_data272w[1..1]), (w_anode325w[0..0] & w_data272w[0..0]), w_anode274w[2..2]);
	w_anode335w[] = ( (w_anode335w[2..2] & w_data272w[2..2]), (w_anode335w[1..1] & (! w_data272w[1..1])), (w_anode335w[0..0] & (! w_data272w[0..0])), w_anode274w[2..2]);
	w_anode345w[] = ( (w_anode345w[2..2] & w_data272w[2..2]), (w_anode345w[1..1] & (! w_data272w[1..1])), (w_anode345w[0..0] & w_data272w[0..0]), w_anode274w[2..2]);
	w_anode355w[] = ( (w_anode355w[2..2] & w_data272w[2..2]), (w_anode355w[1..1] & w_data272w[1..1]), (w_anode355w[0..0] & (! w_data272w[0..0])), w_anode274w[2..2]);
	w_anode365w[] = ( (w_anode365w[2..2] & w_data272w[2..2]), (w_anode365w[1..1] & w_data272w[1..1]), (w_anode365w[0..0] & w_data272w[0..0]), w_anode274w[2..2]);
	w_anode377w[] = ( (w_anode377w[1..1] & (! data_wire[4..4])), (w_anode377w[0..0] & data_wire[3..3]), B"1");
	w_anode387w[] = ( (w_anode387w[2..2] & (! w_data272w[2..2])), (w_anode387w[1..1] & (! w_data272w[1..1])), (w_anode387w[0..0] & (! w_data272w[0..0])), w_anode377w[2..2]);
	w_anode398w[] = ( (w_anode398w[2..2] & (! w_data272w[2..2])), (w_anode398w[1..1] & (! w_data272w[1..1])), (w_anode398w[0..0] & w_data272w[0..0]), w_anode377w[2..2]);
	w_anode408w[] = ( (w_anode408w[2..2] & (! w_data272w[2..2])), (w_anode408w[1..1] & w_data272w[1..1]), (w_anode408w[0..0] & (! w_data272w[0..0])), w_anode377w[2..2]);
	w_anode418w[] = ( (w_anode418w[2..2] & (! w_data272w[2..2])), (w_anode418w[1..1] & w_data272w[1..1]), (w_anode418w[0..0] & w_data272w[0..0]), w_anode377w[2..2]);
	w_anode428w[] = ( (w_anode428w[2..2] & w_data272w[2..2]), (w_anode428w[1..1] & (! w_data272w[1..1])), (w_anode428w[0..0] & (! w_data272w[0..0])), w_anode377w[2..2]);
	w_anode438w[] = ( (w_anode438w[2..2] & w_data272w[2..2]), (w_anode438w[1..1] & (! w_data272w[1..1])), (w_anode438w[0..0] & w_data272w[0..0]), w_anode377w[2..2]);
	w_anode448w[] = ( (w_anode448w[2..2] & w_data272w[2..2]), (w_anode448w[1..1] & w_data272w[1..1]), (w_anode448w[0..0] & (! w_data272w[0..0])), w_anode377w[2..2]);
	w_anode458w[] = ( (w_anode458w[2..2] & w_data272w[2..2]), (w_anode458w[1..1] & w_data272w[1..1]), (w_anode458w[0..0] & w_data272w[0..0]), w_anode377w[2..2]);
	w_anode469w[] = ( (w_anode469w[1..1] & data_wire[4..4]), (w_anode469w[0..0] & (! data_wire[3..3])), B"1");
	w_anode479w[] = ( (w_anode479w[2..2] & (! w_data272w[2..2])), (w_anode479w[1..1] & (! w_data272w[1..1])), (w_anode479w[0..0] & (! w_data272w[0..0])), w_anode469w[2..2]);
	w_anode490w[] = ( (w_anode490w[2..2] & (! w_data272w[2..2])), (w_anode490w[1..1] & (! w_data272w[1..1])), (w_anode490w[0..0] & w_data272w[0..0]), w_anode469w[2..2]);
	w_anode500w[] = ( (w_anode500w[2..2] & (! w_data272w[2..2])), (w_anode500w[1..1] & w_data272w[1..1]), (w_anode500w[0..0] & (! w_data272w[0..0])), w_anode469w[2..2]);
	w_anode510w[] = ( (w_anode510w[2..2] & (! w_data272w[2..2])), (w_anode510w[1..1] & w_data272w[1..1]), (w_anode510w[0..0] & w_data272w[0..0]), w_anode469w[2..2]);
	w_anode520w[] = ( (w_anode520w[2..2] & w_data272w[2..2]), (w_anode520w[1..1] & (! w_data272w[1..1])), (w_anode520w[0..0] & (! w_data272w[0..0])), w_anode469w[2..2]);
	w_anode530w[] = ( (w_anode530w[2..2] & w_data272w[2..2]), (w_anode530w[1..1] & (! w_data272w[1..1])), (w_anode530w[0..0] & w_data272w[0..0]), w_anode469w[2..2]);
	w_anode540w[] = ( (w_anode540w[2..2] & w_data272w[2..2]), (w_anode540w[1..1] & w_data272w[1..1]), (w_anode540w[0..0] & (! w_data272w[0..0])), w_anode469w[2..2]);
	w_anode550w[] = ( (w_anode550w[2..2] & w_data272w[2..2]), (w_anode550w[1..1] & w_data272w[1..1]), (w_anode550w[0..0] & w_data272w[0..0]), w_anode469w[2..2]);
	w_anode561w[] = ( (w_anode561w[1..1] & data_wire[4..4]), (w_anode561w[0..0] & data_wire[3..3]), B"1");
	w_anode571w[] = ( (w_anode571w[2..2] & (! w_data272w[2..2])), (w_anode571w[1..1] & (! w_data272w[1..1])), (w_anode571w[0..0] & (! w_data272w[0..0])), w_anode561w[2..2]);
	w_anode582w[] = ( (w_anode582w[2..2] & (! w_data272w[2..2])), (w_anode582w[1..1] & (! w_data272w[1..1])), (w_anode582w[0..0] & w_data272w[0..0]), w_anode561w[2..2]);
	w_anode592w[] = ( (w_anode592w[2..2] & (! w_data272w[2..2])), (w_anode592w[1..1] & w_data272w[1..1]), (w_anode592w[0..0] & (! w_data272w[0..0])), w_anode561w[2..2]);
	w_anode602w[] = ( (w_anode602w[2..2] & (! w_data272w[2..2])), (w_anode602w[1..1] & w_data272w[1..1]), (w_anode602w[0..0] & w_data272w[0..0]), w_anode561w[2..2]);
	w_anode612w[] = ( (w_anode612w[2..2] & w_data272w[2..2]), (w_anode612w[1..1] & (! w_data272w[1..1])), (w_anode612w[0..0] & (! w_data272w[0..0])), w_anode561w[2..2]);
	w_anode622w[] = ( (w_anode622w[2..2] & w_data272w[2..2]), (w_anode622w[1..1] & (! w_data272w[1..1])), (w_anode622w[0..0] & w_data272w[0..0]), w_anode561w[2..2]);
	w_anode632w[] = ( (w_anode632w[2..2] & w_data272w[2..2]), (w_anode632w[1..1] & w_data272w[1..1]), (w_anode632w[0..0] & (! w_data272w[0..0])), w_anode561w[2..2]);
	w_anode642w[] = ( (w_anode642w[2..2] & w_data272w[2..2]), (w_anode642w[1..1] & w_data272w[1..1]), (w_anode642w[0..0] & w_data272w[0..0]), w_anode561w[2..2]);
	w_data272w[2..0] = data_wire[2..0];
END;
--VALID FILE
